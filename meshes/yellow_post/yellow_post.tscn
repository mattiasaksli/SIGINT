[gd_scene load_steps=7 format=2]

[ext_resource path="res://materials/shaders/outline.shader" type="Shader" id=1]
[ext_resource path="res://meshes/yellow_post/Cylinder.mesh" type="ArrayMesh" id=2]

[sub_resource type="ShaderMaterial" id=1]
shader = ExtResource( 1 )
shader_param/albedo = Color( 0, 0, 0, 1 )
shader_param/grow = 0.25

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode blend_mix, shadows_disabled, ambient_light_disabled;

uniform lowp vec4 cool_color : hint_color = vec4(0.0, 0.0, 0.6, 1.0);
uniform lowp vec4 warm_color : hint_color = vec4(0.35, 0.0, 0.15, 1.0);
uniform lowp vec4 base_color : hint_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform lowp float alpha : hint_range(0.0, 1.0) = 0.3;
uniform lowp float beta : hint_range(0.0, 1.0) = 0.3;

const lowp float specular_power = 48.0;

vec3 gooch_shading(lowp vec3 light_dir, lowp vec3 dir_towards_camera, lowp vec3 normal) {
	// Input vectors are in view space.
	
	lowp vec3 dir_towards_light = normalize(light_dir);
	
	lowp vec3 kcool = min(cool_color.rgb + alpha * base_color.rgb, 1.0);
	lowp vec3 kwarm = min(warm_color.rgb + beta * base_color.rgb, 1.0);
	
	// Fragment is facing towards light -> warm color.
	// Fragment is facing away from light -> cool color.
	lowp vec3 diffuse = mix(kcool, kwarm, max(0.0, dot(normal, dir_towards_light)));

	return diffuse;
}

void light() {
	DIFFUSE_LIGHT = mix(gooch_shading(LIGHT, VIEW, NORMAL), LIGHT_COLOR, 0.05) * ATTENUATION;
	
	lowp vec3 h = normalize(LIGHT + VIEW);
	lowp float specular = pow(max(0.0, dot(NORMAL, h)), specular_power);
	
	SPECULAR_LIGHT += min(LIGHT_COLOR * specular, 1.0) * ATTENUATION;
}
"

[sub_resource type="ShaderMaterial" id=3]
next_pass = SubResource( 1 )
shader = SubResource( 2 )
shader_param/cool_color = Color( 0, 0.054902, 0.870588, 1 )
shader_param/warm_color = Color( 0, 0.870588, 0.686275, 1 )
shader_param/base_color = Color( 1, 0.580392, 0.580392, 1 )
shader_param/alpha = 0.25
shader_param/beta = 0.101

[sub_resource type="BoxShape" id=4]
extents = Vector3( 0.125, 0.125, 0.9 )

[node name="DecorativePost" type="StaticBody"]
transform = Transform( 4, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0.25 )
collision_layer = 4
collision_mask = 2

[node name="Post" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0 )
mesh = ExtResource( 2 )
material/0 = SubResource( 3 )

[node name="CollisionShape" type="CollisionShape" parent="."]
shape = SubResource( 4 )
